 # This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types:
      - opened
      - synchronize
      - closed
    branches: [ main ]
    
#   push:
#     branches: [ main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: notifications
#     env:
#      SECRET_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Test
        if: ${{ github.event_type  == 'push' }}
        env:
         SECRET_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
         echo "$SECRET_URL1"
         curl -H "Content-Type:application/json" -X POST -d '{"name":"${{ github.event.pull_request.user.login }}", "message":"created a new PR \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}' "$SECRET_URL"        

#       - name: New PR
#         if: ${{ github.event.action  == 'opened' }}
#         env:
#          SECRET_URL2: ${{ secrets.SLACK_WEBHOOK_URL }}
#         run: |
#          curl -H "Content-Type:application/json" -X POST -d '{"name":"${{ github.event.pull_request.user.login }}", "message":"created a new PR \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}' "$SECRET_URL2"        
    
#       - name: New PR revision
#         if: ${{ github.event.action == 'synchronize' }} 
#         env:
#          SECRET_URL3: ${{ secrets.SLACK_WEBHOOK_URL }}
#         run: |
#          curl -H "Content-Type:application/json" -X POST -d '{"name":"${{ github.event.pull_request.user.login }}", "message":"pushed a new revision \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}' "$SECRET_URL3"
      
#       - name: PR merge
#         if: github.event.pull_request.merged == true
#         env:
#          SECRET_URL4: ${{ secrets.SLACK_WEBHOOK_URL }}
#         run: |
#          curl -H "Content-Type:application/json" -X POST -d '{"name":"${{ github.actor }}", "message":"merged a PR \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}' "$SECRET_URL4"        

      - name: check for new PR
        if: ${{ github.event.action == 'opened' }}
        uses: fjogeleit/http-request-action@v1.8.1
        with:
          url: '$SECRET_URL'
          method: 'POST'
          data: ' {"name":"${{ github.event.pull_request.user.login }}", "message":"created a new PR \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}'

      - name: Check for new PR revision
        if: ${{ github.event.action == 'synchronize' }}
        uses: fjogeleit/http-request-action@v1.8.1
        with:
          url: '$SECRET_URL'
          method: 'POST'
          data: ' {"name":"${{ github.event.pull_request.user.login }}", "message":"pushed a new revision \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}'

      - name: Check for merge
#         if: github.event.pull_request.merged == true
        uses: fjogeleit/http-request-action@v1.8.1
        with:
          url: '$SECRET_URL'
          method: 'POST'
          data: ' {"name":"${{ github.actor }}", "message":"merged a PR \n ${{ github.base_ref }}  |  ${{ github.event.pull_request.title }}", "pr":"${{ github.event.pull_request.html_url }}"}'
